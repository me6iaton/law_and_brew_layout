/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Anglecia Pro Display';
  src: url("/fonts/subset-AngleciaProDisplay-Medium.eot");
  src: url("/fonts/subset-AngleciaProDisplay-Medium.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-AngleciaProDisplay-Medium.woff") format("woff"), url("/fonts/subset-AngleciaProDisplay-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Anglecia Pro Display';
  src: url("/fonts/subset-AngleciaProDisplay-Black.eot");
  src: url("/fonts/subset-AngleciaProDisplay-Black.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-AngleciaProDisplay-Black.woff") format("woff"), url("/fonts/subset-AngleciaProDisplay-Black.ttf") format("truetype");
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Gotham Pro';
  src: url("/fonts/subset-GothamPro.eot");
  src: url("/fonts/subset-GothamPro.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-GothamPro.woff") format("woff"), url("/fonts/subset-GothamPro.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Anglecia Pro Display';
  src: url("/fonts/subset-AngleciaProDisplay-MediumItalic.eot");
  src: url("/fonts/subset-AngleciaProDisplay-MediumItalic.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-AngleciaProDisplay-MediumItalic.woff") format("woff"), url("/fonts/subset-AngleciaProDisplay-MediumItalic.ttf") format("truetype");
  font-weight: 500;
  font-style: italic;
}

@font-face {
  font-family: 'Gotham Pro';
  src: url("/fonts/subset-GothamPro-Bold.eot");
  src: url("/fonts/subset-GothamPro-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-GothamPro-Bold.woff") format("woff"), url("/fonts/subset-GothamPro-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'MastadoniG5';
  src: url("/fonts/subset-MastadoniG5-Italic.eot");
  src: url("/fonts/subset-MastadoniG5-Italic.eot?#iefix") format("embedded-opentype"), url("/fonts/subset-MastadoniG5-Italic.woff") format("woff"), url("/fonts/subset-MastadoniG5-Italic.ttf") format("truetype");
  font-weight: normal;
  font-style: italic;
}

body {
  background-image: url("/images/bg.jpg");
  background-position: 50% 0%;
  background-repeat: repeat-y;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  color: #fff;
  font-family: 'Gotham Pro';
  font-size: 16px;
}

.visible--xs {
  display: none !important;
}

.visible--sm {
  display: none !important;
}

.visible--md {
  display: none !important;
}

.visible--lg {
  display: none !important;
}

.visible--xs-block,
.visible--xs-inline,
.visible--xs-inline-block,
.visible--sm-block,
.visible--sm-inline,
.visible--sm-inline-block,
.visible--md-block,
.visible--md-inline,
.visible--md-inline-block,
.visible--lg-block,
.visible--lg-inline,
.visible--lg-inline-block {
  display: none !important;
}

@media (max-width: 767px) {
  .visible--xs {
    display: block !important;
  }
  table.visible--xs {
    display: table !important;
  }
  tr.visible--xs {
    display: table-row !important;
  }
  th.visible--xs,
  td.visible--xs {
    display: table-cell !important;
  }
}

@media (max-width: 767px) {
  .visible--xs-block {
    display: block !important;
  }
}

@media (max-width: 767px) {
  .visible--xs-inline {
    display: inline !important;
  }
}

@media (max-width: 767px) {
  .visible--xs-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .visible--sm {
    display: block !important;
  }
  table.visible--sm {
    display: table !important;
  }
  tr.visible--sm {
    display: table-row !important;
  }
  th.visible--sm,
  td.visible--sm {
    display: table-cell !important;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .visible--sm-block {
    display: block !important;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .visible--sm-inline {
    display: inline !important;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .visible--sm-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 1024px) and (max-width: 1279px) {
  .visible--md {
    display: block !important;
  }
  table.visible--md {
    display: table !important;
  }
  tr.visible--md {
    display: table-row !important;
  }
  th.visible--md,
  td.visible--md {
    display: table-cell !important;
  }
}

@media (min-width: 1024px) and (max-width: 1279px) {
  .visible--md-block {
    display: block !important;
  }
}

@media (min-width: 1024px) and (max-width: 1279px) {
  .visible--md-inline {
    display: inline !important;
  }
}

@media (min-width: 1024px) and (max-width: 1279px) {
  .visible--md-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 1280px) {
  .visible--lg {
    display: block !important;
  }
  table.visible--lg {
    display: table !important;
  }
  tr.visible--lg {
    display: table-row !important;
  }
  th.visible--lg,
  td.visible--lg {
    display: table-cell !important;
  }
}

@media (min-width: 1280px) {
  .visible--lg-block {
    display: block !important;
  }
}

@media (min-width: 1280px) {
  .visible--lg-inline {
    display: inline !important;
  }
}

@media (min-width: 1280px) {
  .visible--lg-inline-block {
    display: inline-block !important;
  }
}

@media (max-width: 767px) {
  .hidden--xs {
    display: none !important;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .hidden--sm {
    display: none !important;
  }
}

@media (min-width: 1024px) and (max-width: 1279px) {
  .hidden--md {
    display: none !important;
  }
}

@media (min-width: 1280px) {
  .hidden--lg {
    display: none !important;
  }
}

.visible--print {
  display: none !important;
}

@media print {
  .visible--print {
    display: block !important;
  }
  table.visible--print {
    display: table !important;
  }
  tr.visible--print {
    display: table-row !important;
  }
  th.visible--print,
  td.visible--print {
    display: table-cell !important;
  }
}

.visible--print-block {
  display: none !important;
}

@media print {
  .visible--print-block {
    display: block !important;
  }
}

.visible--print-inline {
  display: none !important;
}

@media print {
  .visible--print-inline {
    display: inline !important;
  }
}

.visible--print-inline-block {
  display: none !important;
}

@media print {
  .visible--print-inline-block {
    display: inline-block !important;
  }
}

@media print {
  .hidden--print {
    display: none !important;
  }
}

html, body {
  max-width: 1900px;
  min-width: 1024px;
  overflow-x: scroll;
}

.container {
  box-sizing: border-box;
  max-width: 1280px;
  min-width: 1024px;
  margin-left: auto;
  margin-right: auto;
}

.container:focus {
  outline: none;
}

.scrollto {
  min-height: 1000px;
}

.scrollto:focus {
  outline: none;
}

.top-bg {
  position: absolute;
  top: 330px;
  z-index: -1;
}

.top-bg--left {
  left: 0px;
}

.top-bg--right {
  right: 0px;
}

@media (max-width: 1279px) {
  .top-bg {
    top: 170px;
  }
  .top-bg img {
    height: 640px;
  }
}

.top {
  display: flex;
  margin-top: 120px;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.top__frends svg .a, .top__frends svg .b, .top__frends svg .c {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.top__frends svg .a {
  stroke-width: 2px;
}

.top__frends svg .c {
  stroke-width: 2px;
  fill-rule: evenodd;
}

.top__frends svg .d {
  fill: #eaae3b;
}

.top__frends svg .e {
  fill: #fff;
}

.top__header {
  flex-grow: 1;
}

.top__header svg {
  display: block;
  margin: 0 auto;
}

.top__header svg .a, .top__header svg .g {
  fill: #fff;
}

.top__header svg .a {
  opacity: 0.95;
}

.top__header svg .b, .top__header svg .c, .top__header svg .d, .top__header svg .e {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.top__header svg .b {
  fill-rule: evenodd;
}

.top__header svg .d {
  fill-rule: evenodd;
  stroke-width: 2px;
}

.top__header svg .e {
  stroke-width: 2px;
}

.top__header svg .f {
  fill: #eaae3b;
}

.top__order svg .a, .top__order svg .b, .top__order svg .c {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.top__order svg .a {
  stroke-width: 2px;
}

.top__order svg .c {
  stroke-width: 2px;
  fill-rule: evenodd;
}

.top__order svg .d {
  fill: #fff;
}

.top__order svg .e {
  fill: #eaae3b;
}

.top__next {
  width: 100%;
  text-align: center;
}

.top__next h2 {
  font-family: "Gotham Pro";
  font-size: 14px;
  font-weight: bold;
  text-transform: uppercase;
  color: #fff;
  font-kerning: normal;
}

@media (max-width: 1279px) {
  .top {
    margin-top: 50px;
    max-width: 860px;
    margin-left: auto;
    margin-right: auto;
    justify-content: space-around;
  }
  .top__frends {
    padding-top: 50px;
  }
  .top__frends svg {
    width: 175px;
    display: block;
  }
  .top__frends svg rect.d {
    display: none;
  }
  .top__header {
    flex-grow: 0;
  }
  .top__header svg {
    width: 416px;
  }
  .top__order {
    padding-top: 50px;
  }
  .top__order svg {
    width: 175px;
    display: block;
  }
  .top__order svg rect.e {
    display: none;
  }
  .top__next {
    margin-top: 80px;
  }
}

#ancor_top {
  margin-top: -83px;
  padding-top: 83px;
}

.menu__top-space {
  height: 83px;
}

.menu--sticky .menu__top-space {
  height: 133px;
}

.menu__container {
  display: flex;
  align-items: center;
  padding: 0 20px;
}

.menu__item {
  font-size: 16px;
  color: #fff;
  font-family: 'Gotham Pro';
  text-decoration: none;
  height: 50px;
  display: flex;
  align-items: center;
  padding: 0 10px;
  margin: 0 10px;
  box-sizing: border-box;
}

.menu__item:hover {
  color: #EAAE3B;
}

.menu__item--active {
  color: #EAAE3B;
  border-bottom: 2px solid #EAAE3B;
}

.menu__header {
  flex-grow: 1;
}

.menu__header svg {
  margin: 0 auto;
  display: block;
  margin-top: -20px;
}

.menu__header svg .a {
  fill: #eaae3b;
}

.menu__header svg .b {
  fill: #fff;
}

.menu__fixed {
  width: 100%;
}

.menu__fixed--sticky {
  background-color: #000100;
  top: 0px;
}

.menu__fixed--sticky svg {
  height: 25px;
  margin-top: 0;
}

.button {
  display: flex;
  align-items: center;
  padding: 0 20px;
  color: #EAAE3B;
  font-size: 14px;
  text-transform: uppercase;
  font-weight: bold;
  text-decoration: none;
  border: 2px solid #EAAE3B;
  height: 50px;
  box-sizing: border-box;
}

@media (max-width: 1279px) {
  #ancor_top {
    margin-top: -43px;
    padding-top: 43px;
  }
  .menu__top-space {
    height: 43px;
  }
  .menu--sticky .menu__top-space {
    height: 93px;
  }
  .menu__header svg {
    width: 200px;
  }
}

.process {
  min-height: 2000px;
  background-image: url("/images/big/img-11.png");
  background-repeat: no-repeat;
  background-position: center top;
  background-size: 405px;
  padding-top: 100px;
}

.process__row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 50px;
}

.process__row:nth-child(2) {
  margin-top: 145px;
}

.process__box {
  width: calc(99.99% * 1/3 - (30px - 30px * 1/3));
  flex: 0 0 auto;
  text-align: center;
}

.process__box:nth-child(n) {
  margin-right: 30px;
}

.process__box:last-child {
  margin-right: 0;
}

.process__box:nth-child(3n) {
  margin-right: 0;
}

.process__box h3 {
  font-family: 'Anglecia Pro Display';
  font-size: 38px;
  color: #fff;
  font-weight: normal;
  font-kerning: normal;
  margin: 0;
}

.process__desc {
  font-family: 'Anglecia Pro Display';
  font-style: italic;
  font-size: 18px;
  color: #EAAE3B;
  margin-top: 40px;
}

.process__icon {
  margin-top: 40px;
}

.process__icon--sterility .a, .process__icon--sterility .b, .process__icon--recept .a, .process__icon--recept .b {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.process__icon--sterility .a, .process__icon--recept .a {
  stroke-width: 2px;
}

.process__icon--import .a {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.process__icon--import .b {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
}

.process__icon--natural .a {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
}

.process__rhombus {
  width: calc(99.99% * 1/3 - (30px - 30px * 1/3));
  flex: 0 0 auto;
  text-align: center;
}

.process__rhombus:nth-child(n) {
  margin-right: 30px;
}

.process__rhombus:last-child {
  margin-right: 0;
}

.process__rhombus:nth-child(3n) {
  margin-right: 0;
}

.process__rhombus .a {
  fill: #eaae3b;
}

.process__order {
  width: calc(99.99% * 1/3 - (30px - 30px * 1/3));
  flex: 0 0 auto;
  position: relative;
}

.process__order:nth-child(n) {
  margin-right: 30px;
}

.process__order:last-child {
  margin-right: 0;
}

.process__order:nth-child(3n) {
  margin-right: 0;
}

.process__order .border-box {
  box-sizing: border-box;
  width: calc(100% + 30px);
  margin-left: -20px;
}

.process__screen-time {
  margin-top: 320px;
}

.process__screen-time .process__row {
  margin-top: 100px;
}

.process__clock {
  text-align: center;
}

.process__clock .a, .process__clock .b {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.process__clock .a {
  stroke-width: 2px;
}

.process__time {
  width: calc(99.99% * 1/3 - (0px - 0px * 1/3));
  flex: 0 0 auto;
}

.process__time:nth-child(n) {
  margin-right: 0px;
}

.process__time:last-child {
  margin-right: 0;
}

.process__time:nth-child(3n) {
  margin-right: 0;
}

.process__time h3 {
  font-family: 'Gotham Pro';
  font-size: 30px;
  text-transform: uppercase;
  font-weight: normal;
  color: #EAAE3B;
  margin: 0;
  margin-top: 20px;
  text-align: center;
  font-kerning: normal;
}

.process__time h4 {
  font-family: 'Gotham Pro';
  font-size: 15px;
  text-transform: uppercase;
  font-weight: normal;
  margin: 0;
  color: #fff;
  text-align: center;
  font-kerning: normal;
}

.process__time--single {
  width: 100%;
}

.process__time--single h3, .process__time--single h4 {
  text-align: center;
}

.process__time--single h3 {
  font-size: 57px;
  margin: 0;
}

.process__time--single h4 {
  margin-top: 35px;
}

.process__time--single h4:last-child {
  margin-top: 20px;
}

@media (max-width: 1279px) {
  .process {
    background-size: 320px;
    padding-top: 80px;
  }
  .process__row {
    margin-top: 40px;
  }
  .process__row:nth-child(2) {
    margin-top: 60px;
  }
  .process__box h3 {
    font-size: 28px;
  }
  .process__desc {
    font-size: 14px;
    margin-top: 30px;
  }
  .process__icon {
    margin-top: 30px;
  }
  .process__order .border-box {
    width: calc(100% + 110px);
    margin-left: -64px;
  }
  .process__screen-time {
    margin-top: 220px;
  }
}

.screen-head {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.screen-head__rhombus {
  margin: 0 30px;
}

.screen-head__rhombus .a {
  fill: #eaae3b;
}

.screen-head__header {
  font-family: 'Anglecia Pro Display';
  font-size: 48.6px;
  text-transform: uppercase;
  font-kerning: normal;
  color: #fff;
  margin: 0;
  font-weight: normal;
}

.screen-head__sub-header {
  font-family: 'Gotham Pro';
  font-size: 15px;
  font-weight: bold;
  text-transform: uppercase;
  font-kerning: normal;
  color: #fff;
  width: 100%;
  text-align: center;
  margin: 20px 0 0 0;
}

.border-box {
  position: relative;
  background-color: #230605;
  display: block;
  border: 2px solid #EAAE3B;
  box-shadow: 0 0 0 7px #230605;
  padding: 40px 65px;
}

.border-box__cornel {
  display: inline-block;
  position: absolute;
}

.border-box__cornel:nth-child(1) {
  transform: rotate(90deg);
  top: 5px;
  left: 5px;
}

.border-box__cornel:nth-child(2) {
  top: 5px;
  right: 5px;
  transform: rotate(180deg);
}

.border-box__cornel:nth-child(3) {
  bottom: 5px;
  left: 5px;
}

.border-box__cornel:nth-child(4) {
  right: 5px;
  bottom: 5px;
  transform: rotate(270deg);
}

.border-box__cornel .a, .border-box__cornel .b {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
}

.border-box__header {
  font-family: 'Anglecia Pro Display';
  font-size: 38px;
  text-transform: uppercase;
  font-kerning: normal;
  color: #EAAE3B;
  margin: 0;
  text-align: center;
  font-weight: normal;
}

.border-box__sub-header {
  font-family: 'Gotham Pro';
  font-weight: bold;
  font-size: 15px;
  margin-top: 10px;
  color: #fff;
  font-kerning: normal;
  text-align: center;
}

.border-box--double {
  box-shadow: none;
  background-color: transparent;
  padding: 57px 40px;
}

.border-box--double .border-box__cornel:nth-child(1) {
  top: -4px;
  left: -2px;
}

.border-box--double .border-box__cornel:nth-child(2) {
  top: -4px;
  right: -2px;
}

.border-box--double .border-box__cornel:nth-child(3) {
  bottom: -4px;
  left: -2px;
}

.border-box--double .border-box__cornel:nth-child(4) {
  right: -2px;
  bottom: -4px;
}

.border-box--double .border-box__header {
  text-transform: lowercase;
  color: #fff;
}

.border-box--double .border-box__header::first-letter {
  text-transform: uppercase;
}

.border-box--double .border-box__quote {
  display: flex;
  height: 70px;
  justify-content: center;
}

.border-box--double .border-box__quote svg {
  align-self: center;
}

.border-box--double .border-box__quote svg .a {
  fill: #eaae3b;
}

.border-box--double .border-box__desc {
  font-family: 'Anglecia Pro Display';
  font-style: italic;
  font-size: 24px;
  text-align: center;
  color: #EAAE3B;
}

.about {
  display: flex;
  padding-top: 125px;
}

.about__col {
  width: calc(99.99% * 1/2 - (70px - 70px * 1/2));
  flex: 0 0 auto;
}

.about__col:nth-child(n) {
  margin-right: 70px;
}

.about__col:last-child {
  margin-right: 0;
}

.about__col:nth-child(2n) {
  margin-right: 0;
}

.about__fixed {
  display: flex;
  justify-content: center;
  align-content: center;
}

.about__citation {
  margin-right: 30px;
}

.about__citation h4 {
  font-family: 'Gotham Pro';
  font-size: 15px;
  font-weight: normal;
  margin: 0;
  text-transform: uppercase;
  color: #EAAE3B;
}

.about__citation p {
  margin: 25px 0;
}

.about__quote .a {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
}

.about__attention {
  position: relative;
  top: -20px;
}

.about__attention .a, .about__attention .b {
  fill: none;
  stroke: #eaae3b;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.about__attention .a {
  stroke-width: 2px;
}

/*# sourceMappingURL=data:application/json;base64, */
